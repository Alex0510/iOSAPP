name: Build iOS IPA and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
      # 拉取仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 选择 Xcode
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      # 自动检测 workspace/project
      - name: Detect Xcode Project
        id: detect
        run: |
          workspace=$(find . -maxdepth 1 -type d -name "*.xcworkspace" | head -n 1)
          project=$(find . -maxdepth 1 -name "*.xcodeproj" | head -n 1)
          if [ -n "$workspace" ]; then
            echo "type=workspace" >> $GITHUB_ENV
            echo "file=$workspace" >> $GITHUB_ENV
          elif [ -n "$project" ]; then
            echo "type=project" >> $GITHUB_ENV
            echo "file=$project" >> $GITHUB_ENV
          else
            echo "❌ 没找到 .xcworkspace 或 .xcodeproj"
            exit 1
          fi

      # 自动获取 scheme
      - name: Detect Scheme
        id: scheme
        run: |
          if [ "${{ env.type }}" = "workspace" ]; then
            SCHEME=$(xcodebuild -list -json -workspace "${{ env.file }}" | jq -r '.workspace.schemes[0]')
          else
            SCHEME=$(xcodebuild -list -json -project "${{ env.file }}" | jq -r '.project.schemes[0]')
          fi
          if [ -z "$SCHEME" ] || [ "$SCHEME" = "null" ]; then
            echo "❌ 没找到 scheme"
            exit 1
          fi
          echo "scheme=$SCHEME" >> $GITHUB_ENV

      # 解析 SPM 依赖
      - name: Resolve Swift Packages
        run: |
          if [ "${{ env.type }}" = "workspace" ]; then
            xcodebuild -workspace "${{ env.file }}" -scheme "${{ env.scheme }}" -sdk iphoneos -resolvePackageDependencies
          else
            xcodebuild -project "${{ env.file }}" -scheme "${{ env.scheme }}" -sdk iphoneos -resolvePackageDependencies
          fi

      # 编译 .app
      - name: Build .app
        run: |
          if [ "${{ env.type }}" = "workspace" ]; then
            xcodebuild \
              -workspace "${{ env.file }}" \
              -scheme "${{ env.scheme }}" \
              -sdk iphoneos \
              -configuration Release \
              CODE_SIGNING_ALLOWED=NO \
              clean build \
              CONFIGURATION_BUILD_DIR=$PWD/build/Release-iphoneos
          else
            xcodebuild \
              -project "${{ env.file }}" \
              -scheme "${{ env.scheme }}" \
              -sdk iphoneos \
              -configuration Release \
              CODE_SIGNING_ALLOWED=NO \
              clean build \
              CONFIGURATION_BUILD_DIR=$PWD/build/Release-iphoneos
          fi

      # 打包 .app -> .ipa
      - name: Package IPA
        run: |
          mkdir Payload
          app_path=$(ls build/Release-iphoneos/*.app | head -n 1)
          cp -r "$app_path" Payload/
          zip -r App.ipa Payload
          rm -rf Payload

      # 上传到 GitHub Release
      - name: Create Release and Upload IPA
        uses: ncipollo/release-action@v1
        with:
          tag: "v$(date +'%Y%m%d%H%M')"  # 自动生成唯一 tag
          name: "iOS Build $(date +'%Y-%m-%d %H:%M')"
          files: App.ipa
          draft: false
          prerelease: false
